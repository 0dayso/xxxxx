#!/usr/bin/env python
# -*- coding:utf8 -*-

import os
import sys
from spider.savebin import FileSaver
from spider.genquery import GenQueries, GQDataHelper
import re
import copy

bj = [["4010200","销售业务","20"],["7001000","销售管理","20"],["7002000","销售行政/商务","20"],["4000000","客服/售前/售后技术支持","20"],["4082000","市场","20"],["4084000","公关/媒介","20"],["7004000","广告/会展","20"],["2060000","财务/审计/税务","21"],["5002000","人力资源","21"],["3010000","行政/后勤/文秘","21"],["201300","项目管理/项目协调","22"],["2023405","质量管理/安全防护","22"],["1050000","高级管理","22"],["160000","软件/互联网开发/系统集成","23"],["160300","硬件开发","23"],["160200","互联网产品/运营管理","23"],["160400","IT质量管理/测试/配置管理","23"],["200500","IT运维/技术支持","23"],["200300","IT管理/项目协调","23"],["5001000","电信/通信技术开发及应用","23"],["141000","房地产开发/经纪/中介","24"],["140000","土木/建筑/装修/市政工程","24"],["142000","物业管理","24"],["2071000","银行","25"],["2070000","证券/期货/投资管理/服务","25"],["7006000","保险","25"],["200900","信托/担保/拍卖/典当","25"],["4083000","采购/贸易","26"],["4010300","交通运输服务","26"],["4010400","物流/仓储","26"],["121100","生产管理/运营","27"],["160100","电子/电器/半导体/仪器仪表","27"],["7003000","汽车制造","27"],["7003100","汽车销售与服务","27"],["5003000","机械设计/制造/维修","27"],["7005000","服装/纺织/皮革设计/生产","27"],["5004000","技工/操作工","27"],["121300","生物/制药/医疗器械","27"],["120500","化工","27"],["2120000","影视/媒体/出版/印刷","28"],["2100708","艺术/设计","28"],["2140000","咨询/顾问/调研/数据分析","29"],["2090000","教育/培训","29"],["2080000","律师/法务/合规","29"],["2120500","翻译（口译与笔译）","29"],["5005000","商超/酒店/娱乐管理/服务","30"],["4040000","旅游/度假/出入境服务","30"],["201100","烹饪/料理/食品研发","30"],["2050000","保健/美容/美发/健身","30"],["2051000","医院/医疗/护理","30"],["6270000","社区/居民/家政服务","30"],["130000","能源/矿产/地质勘查","31"],["2023100","环境科学/环保","31"],["100000","农/林/牧/渔业","31"],["200100","公务员/事业单位/科研机构","31"],["5006000","实习生/培训生/储备干部","32"],["200700","志愿者/社会工作者","32"],["300100","兼职/临时","32"],["300200","其他","32"]]
in_= [["210500","互联网/电子商务","10100"],["160400","计算机软件","10100"],["160000","IT服务(系统/数据/维护)","10100"],["160500","电子技术/半导体/集成电路","10100"],["160200","计算机硬件","10100"],["300100","通信/电信/网络设备","10100"],["160100","通信/电信运营、增值服务","10100"],["160600","网络游戏","10100"],["180000","基金/证券/期货/投资","10200"],["180100","保险","10200"],["300500","银行","10200"],["300900","信托/担保/拍卖/典当","10200"],["140000","房地产/建筑/建材/工程","10800"],["140100","家居/室内设计/装饰装潢","10800"],["140200","物业管理/商业中心","10800"],["200300","专业服务/咨询(财会/法律/人力资源等)","10900"],["200302","广告/会展/公关","10900"],["201400","中介服务","10900"],["201300","检验/检测/认证","10900"],["300300","外包服务","10900"],["120400","快速消费品（食品/饮料/烟酒/日化）","10300"],["120200","耐用消费品（服饰/纺织/皮革/家具/家电）","10300"],["170500","贸易/进出口","10300"],["170000","零售/批发","10300"],["300700","租赁服务","10300"],["201100","教育/培训/院校","10400"],["120800","礼品/玩具/工艺美术/收藏品/奢侈品","10400"],["121000","汽车/摩托车","10500"],["129900","大型设备/机电设备/重工业","10500"],["121100","加工制造（原料加工/模具）","10500"],["121200","仪器仪表及工业自动化","10500"],["210600","印刷/包装/造纸","10500"],["120700","办公用品及设备","10500"],["121300","医药/生物工程","10500"],["121500","医疗设备/器械","10500"],["300000","航空/航天研究与制造","10500"],["150000","交通/运输","11500"],["301100","物流/仓储","11500"],["121400","医疗/护理/美容/保健/卫生服务","10000"],["200600","酒店/餐饮","10000"],["200800","旅游/度假","10000"],["210300","媒体/出版/影视/文化传播","11300"],["200700","娱乐/体育/休闲","11300"],["130000","能源/矿产/采掘/冶炼","11600"],["120500","石油/石化/化工","11600"],["130100","电气/电力/水利","11600"],["201200","环保","11600"],["200100","政府/公共事业/非盈利机构","11100"],["120600","学术/科研","11100"],["100000","农/林/牧/渔","11400"],["100100","跨领域经营","11400"],["990000","其他","11400"]]
jl = [["北京","530","489"],["上海","538","489"],["广东","548","489"],["天津","531","489"],["湖北","546","489"],["陕西","556","489"],["四川","552","489"],["辽宁","535","489"],["吉林","536","489"],["江苏","539","489"],["山东","544","489"],["浙江","540","489"],["广西","549","489"],["安徽","541","489"],["河北","532","489"],["山西","533","489"],["内蒙古","534","489"],["黑龙江","537","489"],["福建","542","489"],["江西","543","489"],["河南","545","489"],["湖南","547","489"],["海南","550","489"],["重庆","551","489"],["贵州","553","489"],["云南","554","489"],["西藏","555","489"],["甘肃","557","489"],["青海","558","489"],["宁夏","559","489"],["新疆","560","489"],["香港","561","489"],["澳门","562","489"],["台湾省","563","489"],["国外","480","0"],["阿根廷","481","0"],["澳大利亚","482","0"],["奥地利","483","0"],["白俄罗斯","484","0"],["比利时","485","0"],["巴西","486","0"],["保加利亚","487","0"],["加拿大","488","0"],["塞浦路斯","490","0"],["捷克","491","0"],["丹麦","492","0"],["埃及","493","0"],["芬兰","494","0"],["法国","495","0"],["德国","496","0"],["希腊","497","0"],["匈牙利","498","0"],["冰岛","499","0"],["印度","500","0"],["印度尼西亚","501","0"],["爱尔兰","502","0"],["以色列","503","0"],["意大利","504","0"],["日本","505","0"],["韩国","506","0"],["科威特","507","0"],["马来西亚","508","0"],["荷兰","509","0"],["新西兰","510","0"],["挪威","511","0"],["巴基斯坦","513","0"],["波兰","514","0"],["葡萄牙","515","0"],["俄罗斯联邦","516","0"],["沙特阿拉伯","517","0"],["新加坡","518","0"],["南非","519","0"],["西班牙","520","0"],["瑞典","521","0"],["瑞士","522","0"],["泰国","523","0"],["土耳其","524","0"],["乌克兰","525","0"],["阿联酋","526","0"],["英国","527","0"],["美国","528","0"],["越南","529","0"],["安哥拉","913","0"],["加纳","914","0"],["尼日利亚","915","0"],["坦桑尼亚","916","0"],["乌干达","917","0"],["阿尔及利亚","918","0"],["塞内加尔","919","0"],["其他","512","0"]]

we=[["0000","无经验"],["0001","1年以下"],["0103","1-3年"],["0305","3-5年"],["0510","5-10年"],["1099","10年以上"]]
el=[["-1","无"],["7","高中/中专/中技及以下"],["5","大专及同等学历"],["4","本科/学士及等同学历"],["3","硕士/研究生及等同学历"],["1","博士及以上"],["8","其他"]]
ct=[["1","国企"],["5","民营"],["4","合资"],["2","外商独资"],["8","股份制企业"],["9","上市公司"],["3","代表处"],["6","国家机关"],["10","事业单位"],["7","其它"]]
cs=[["1","20人以下"],["2","20-99人"],["3","100-499人"],["4","500-999人"],["5","1000-9999人"],["6","10000人以上"]]
et=[["2","全职"],['1',"兼职"],['4',"实习"]]

salary=[[0, 0, 1000], [1, 1001, 6000], [2, 6001, 8000], [3, 8001, 10000], [4, 10001, 99999]]

def parseInt(s):
    m = re.match("\s*([0-9]+)", s)
    if m:
        return int(m.group(1))
    raise ValueError("invalid string %s to int" % s)

class GenZLQuery(GenQueries):
    def __init__(self):
        GenQueries.__init__(self)
        self.thread_count = 8
        self._name = "zhilian_queries"

    def init_conditions(self):
        GQDataHelper.add(self, 'jl', jl)
        GQDataHelper.add(self, 'cs', cs)
        GQDataHelper.add(self, 'ct', ct)
        GQDataHelper.add(self, 'el', el)
        #GQDataHelper.add(self, 'we', we) #不能正交切分。....
        GQDataHelper.add(self, 'in', in_)
        GQDataHelper.add(self, 'salary', salary)
        GQDataHelper.add(self, 'bj', bj)
        GQDataHelper.add(self, 'et', et)
        self.bs2 = FileSaver("failed_urls.txt")

    def need_split(self, params, level, islast):
        url = self.gen_url(params)
        con = self.request_url(url)
        if con is not None:
            m = re.search(ur"(?:共|多于)<em>(\d+)</em>个职位满足条件", con.text)
            if m:
                found = m.group(1).encode('utf-8')
                count = parseInt(found)
                with self.locker:
                    print "[%d] %s ==> %s %s" % (level, url, found, 'failed' if (count>=3600) else '')
                if parseInt(found) >= 3600:
                    return True
                else:
                    return False
        with self.locker:
            self.bs2.append("==failed get con: %s====" % url)
            print "===%s===" % url
            print con.text
        return False
    def process_failed_url(self, params):
        self.bs2.append(self.gen_url(params))
        return False
    def log_url(self, params):
        url = self.gen_url(params)
        self.fs.append(url)
        return True
    def gen_url(self, p):
        url = "http://sou.zhaopin.com/jobs/searchresult.ashx?isadv=1&jl=全国&sm=0&pd=7"
        for i in p:
            if i == 'salary':
                idx = p[i]
                url = self.compose_url(url, 'sf', salary[idx][1])
                url = self.compose_url(url, 'st', salary[idx][2])
            else:
                url = self.compose_url(url, i, p[i])
        return url


if __name__ == "__main__":
    g = GenZLQuery()
    g.run()
